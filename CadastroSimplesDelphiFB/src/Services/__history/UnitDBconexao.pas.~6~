unit UnitDBconexao;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Phys.IBBase, FireDAC.Comp.UI,
  Data.DB, FireDAC.Comp.Client, System.IniFiles, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet;

type
  TServicoDataModule = class(TDataModule)
    FDConnection: TFDConnection;
    FDGUIxWaitCursor: TFDGUIxWaitCursor;
    FDPhysFBDriverLink: TFDPhysFBDriverLink;
    FDQueryFiltroPessoa: TFDQuery;
    FDQueryFiltroPessoaID_PESSOA: TLargeintField;
    FDQueryFiltroPessoaIND_TIPO_PESSOA: TStringField;
    FDQueryFiltroPessoaNOM_ENDERECO: TStringField;
    FDQueryFiltroPessoaNOM_MUNICIPIO: TStringField;
    FDQueryFiltroPessoaNUM_CPF_CNPJ: TStringField;
    FDQueryFiltroPessoaNOM_PESSOA: TStringField;
    FDQueryFiltroPessoaID_ENDERECO: TLargeintField;
    FDQueryFiltroPessoaNUM_CEP: TStringField;
    FDQueryFiltroPessoaNUM_ENDERECO: TStringField;
    FDQueryFiltroPessoaNOM_BAIRRO: TStringField;
    FDQueryFiltroPessoaCOD_UF: TStringField;
    FDQueryFiltroPessoaTXT_COMPLEMENTO: TStringField;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ServicoDataModule: TServicoDataModule;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TServicoDataModule.DataModuleCreate(Sender: TObject);
var
    varIniFile : TIniFile;
    varDataBase : String;
    varUsername : String;
    varPassword : String;
    varServidor : String;
    varCaminho  : String;
    varPorta : Integer;
begin
    try
      FDConnection.Connected := false;

      varCaminho := ExtractFileDir(ParamStr(0)) + '\Login.ini';
      // FDPhysFBDriverLink.VendorHome := ExtractFileDir(ParamStr(0)) + 'dlls';

      varIniFile := TIniFile.Create(varCaminho);

      varDataBase := varIniFile.ReadString('Conexao', 'Database', varDataBase);
      varServidor := varIniFile.ReadString('Conexao', 'Servidor', varServidor);
      varPorta := varIniFile.ReadInteger('Conexao', 'Porta', varPorta);

      varUsername := 'SYSDBA';
      varPassword := 'masterkey';

      FDConnection.Params.Values['Database']  := varDataBase;
      FDConnection.Params.Values['Servidor']  := varServidor;
      FDConnection.Params.Values['Porta']  := varPorta.ToString;
      FDConnection.Params.Values['User_Name']  := varUsername;
      FDConnection.Params.Values['Passowrd']  := varPassword;
    finally

    FreeAndNil(varIniFile);

    end;
end;

end.
